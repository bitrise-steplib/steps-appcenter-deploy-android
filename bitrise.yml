format_version: "9"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

workflows:
  vendor-update:
    title: Vendor update
    description: |
      Used for updating the vendored dependencies
    steps:
    - script:
        title: Vendor update
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            go mod vendor
  test:
    envs:
    - APK_DOWNLOAD_URL: https://raw.githubusercontent.com/bitrise-io/sample-artifacts/master/apks/app-armeabi-v7a-release.apk
    - APK_PATH: app-debug.apk
    - AAB_DOWNLOAD_URL: https://raw.githubusercontent.com/bitrise-io/sample-artifacts/master/app-bitrise-signed.aab
    - AAB_PATH: app-bitrise-signed.aab
    - MAPPING_DOWNLOAD_URL: https://raw.githubusercontent.com/bitrise-io/sample-artifacts/master/mappings/app-armeabi-v7a-release.txt
    - MAPPING_PATH: mapping.txt
    - APPCENTER_APP_NAME: steps-appcenter-deploy-android
    - APPCENTER_APP_OWNER: app-center-bot
    steps:
    - go-list:
    - golint:
    - errcheck:
    - go-test:
    - script:
        title: Clean _tmp
        inputs:
          - content: rm -rf ./_tmp
    - change-workdir:
        title: Change workdir to _tmp
        run_if: true
        inputs:
          - path: ./_tmp
    - script:
        title: Download testing resources
        inputs:
          - content: |-
              #!/bin/bash
              set -ex
              curl -f $APK_DOWNLOAD_URL > $APK_PATH
              curl -f $MAPPING_DOWNLOAD_URL > $MAPPING_PATH
              curl -f $AAB_DOWNLOAD_URL > $AAB_PATH
    - path::./:
        inputs:
          - app_path: $APK_PATH
          - api_token: $API_TOKEN
          - owner_name: $APPCENTER_APP_OWNER
          - app_name: $APPCENTER_APP_NAME
          - debug: "no" # Because of the upload
          - distribution_group: |-
              Collaborators
              Public
          - mapping_path: $MAPPING_PATH
          - distribution_tester: tooling.bot@bitrise.io
          - release_notes: Bitrise step test
    - script:
        title: Check output envs
        inputs:
          - content: |-
              #!/bin/bash
              set -ex

              if [ -z $APPCENTER_DEPLOY_INSTALL_URL ]
              then
                echo "ERROR: APPCENTER_DEPLOY_INSTALL_URL variable empty"
                exit 1
              fi

              if [ -z $APPCENTER_DEPLOY_DOWNLOAD_URL ];
              then
                echo "ERROR: APPCENTER_DEPLOY_DOWNLOAD_URL variable empty"
                exit 1
              fi

              if [ -z $APPCENTER_PUBLIC_INSTALL_PAGE_URL ]
              then
                echo "ERROR: APPCENTER_PUBLIC_INSTALL_PAGE_URL variable empty"
                exit 1
              fi

              if [ "$APPCENTER_DEPLOY_STATUS" != "success" ]
              then
                echo "ERROR: APPCENTER_DEPLOY_STATUS variable is $APPCENTER_DEPLOY_STATUS"
                exit 1
              fi

              if [ -z $APPCENTER_RELEASE_PAGE_URL ]
              then
                echo "ERROR: APPCENTER_RELEASE_PAGE_URL variable empty"
                exit 1
              fi

              envman add --key "APPCENTER_DEPLOY_INSTALL_URL" --value ""
              envman add --key "APPCENTER_DEPLOY_DOWNLOAD_URL" --value ""
              envman add --key "APPCENTER_PUBLIC_INSTALL_PAGE_URL" --value ""
              envman add --key "APPCENTER_DEPLOY_STATUS" --value ""
              envman add --key "APPCENTER_RELEASE_PAGE_URL" --value ""

    - path::./:
        inputs:
          - app_path: $AAB_PATH
          - api_token: $API_TOKEN
          - owner_name: $APPCENTER_APP_OWNER
          - app_name: $APPCENTER_APP_NAME
          - debug: "no" # Because of the upload
          - release_notes: Bitrise step test
    - script:
        title: Check output envs
        inputs:
          - content: |-
              #!/bin/bash
              set -ex

              if [ -z $APPCENTER_DEPLOY_INSTALL_URL ]
              then
                echo "ERROR: APPCENTER_DEPLOY_INSTALL_URL variable empty"
                exit 1
              fi

              if [ -z $APPCENTER_DEPLOY_DOWNLOAD_URL ];
              then
                echo "ERROR: APPCENTER_DEPLOY_DOWNLOAD_URL variable empty"
                exit 1
              fi

              if [ -z $APPCENTER_DEPLOY_RELEASE_ID ];
              then
                echo "ERROR: APPCENTER_DEPLOY_RELEASE_ID variable empty"
                exit 1
              fi

              if [ "$APPCENTER_DEPLOY_STATUS" != "success" ]
              then
                echo "ERROR: APPCENTER_DEPLOY_STATUS variable is $APPCENTER_DEPLOY_STATUS"
                exit 1
              fi

              envman add --key "APPCENTER_DEPLOY_INSTALL_URL" --value ""
              envman add --key "APPCENTER_DEPLOY_DOWNLOAD_URL" --value ""
              envman add --key "APPCENTER_DEPLOY_RELEASE_ID" --value ""
              envman add --key "APPCENTER_DEPLOY_STATUS" --value ""
